library(clustree)
library(Seurat)
library(EnhancedVolcano)

SrcGFP_1.data <- Read10X("/Volumes/Macintosh HD/Users/amay/Desktop/ThesisRevisions/Datasets/may_2023/SrcGFP_4/filtered_feature_bc_matrix/")
SrcGFP_2.data <- Read10X("/Volumes/Macintosh HD/Users/amay/Desktop/ThesisRevisions/Datasets/may_2023/SrcGFP_3/filtered_feature_bc_matrix/")
ArmYFP.data <- Read10X("/Volumes/Macintosh HD/Users/amay/Desktop/ThesisRevisions/Datasets/may_2023/ArmYFP/filtered_feature_bc_matrix/")


#Generate Seurat Object 
SrcGFP_1 <- CreateSeuratObject(SrcGFP_1.data)
SrcGFP_2 <- CreateSeuratObject(SrcGFP_2.data)
ArmYFP <- CreateSeuratObject(ArmYFP.data)

SrcGFP_1$geno <- "Salivary Gland"
SrcGFP_2$geno <- "Salivary Gland"
ArmYFP$geno <- "Epidermis"


SrcGFP_1$orig.ident <- "SrcGFP_1"
SrcGFP_2$orig.ident <- "SrcGFP_2"
ArmYFP$orig.ident <- "ArmYFP"


SrcGFP.combined <- merge(SrcGFP_1, y = c(SrcGFP_2, ArmYFP), add.cell.ids = c("SrcGFP1", "SrcGFP2", "ArmYFP"))
table(SrcGFP.combined$geno)
SrcGFP.combined[["percent.mt"]] <- PercentageFeatureSet(SrcGFP.combined, pattern = "mt:")
SrcGFP.combined[["percent.ribo"]] <- PercentageFeatureSet(SrcGFP.combined, pattern = "^Rp[LS]")
VlnPlot(SrcGFP.combined, features = c("nFeature_RNA", "nCount_RNA", "percent.mt", "percent.ribo"), split.by = "orig.ident" , ncol = 4)

SrcGFP.combined <- subset(SrcGFP.combined, subset = nFeature_RNA > 200 & nFeature_RNA < 2500 & nCount_RNA <10000 & percent.mt < 10)

table(SrcGFP.combined$geno)

VlnPlot(SrcGFP.combined, features = c("nFeature_RNA", "nCount_RNA", "percent.mt", "percent.ribo"), split.by = "geno" , ncol = 4)

SrcGFP.list <- SplitObject(SrcGFP.combined, split.by = "orig.ident")
SrcGFP.list
SrcGFP.list <- lapply(X = SrcGFP.list, FUN = SCTransform, vars.to.regress = c("percent.mt", "percent.ribo"))
features <- SelectIntegrationFeatures(object.list = SrcGFP.list, nfeatures = 3000)
SrcGFP.list <- PrepSCTIntegration(object.list = SrcGFP.list, anchor.features = features)

SrcGFP.anchors <- FindIntegrationAnchors(object.list = SrcGFP.list, normalization.method = "SCT", 
                                         anchor.features = features)
SrcGFP.combined.sct <- IntegrateData(anchorset = SrcGFP.anchors, normalization.method = "SCT")

SrcGFP.combined.sct <- RunPCA(SrcGFP.combined.sct)

#Estimate dimentions----
pct <- SrcGFP.combined.sct[["pca"]]@stdev / sum(SrcGFP.combined.sct[["pca"]]@stdev) * 100
cumu <- cumsum(pct)
co1 <- which(cumu > 90 & pct < 5)[1]
co2 <- sort(which((pct[1:length(pct) - 1] - pct[2:length(pct)]) > 0.1), decreasing = T)[1] + 1
pcs <- min(co1, co2)
pcs

#Plot dimentions 10 for UMAP it is the lower bound of dimentions ----
SrcGFP.combined.sct <- RunUMAP(SrcGFP.combined.sct, reduction = "pca", dims = 1:44)
DimPlot(SrcGFP.combined.sct, reduction = "umap", group.by = "orig.ident")
SrcGFP.combined.sct <- FindNeighbors(SrcGFP.combined.sct, reduction = "pca", dims = 1:44)
SrcGFP.combined.sct <- FindClusters(SrcGFP.combined.sct, resolution = 0.2)
DimPlot(SrcGFP.combined.sct, pt.size = 2)
DimPlot(SrcGFP.combined.sct, pt.size = 2, cells.highlight = MayQCCells)
DimPlot(SrcGFP.combined.sct, pt.size = 2, cells.highlight = CellsToKeep)

DimPlot(SrcGFP.combined.sct, reduction = "umap", group.by = "orig.ident")
FeaturePlot(SrcGFP.combined.sct, features = "percent.ribo", cols = c("yellow", "blue"), pt.size = 2, order = T)

SrcGFP.combined.sct@active.assay <- "integrated" 

SrcGFP.combined.sct <- FindClusters(SrcGFP.combined.sct, resolution = c(seq(0, to = 0.5, by=0.1)))
SrcGFP.combined.sct <- FindClusters(SrcGFP.combined.sct, resolution = 1)
DimPlot(SrcGFP.combined.sct)

SrcGFP.combined.sct@meta.data <- SrcGFP.combined.sct@meta.data[, paste0("integrated_snn_res.", c(0, 0.1, 0.2, 0.3, 0.4, 0.5, 1))]
p1 <- clustree(SrcGFP.combined.sct, node_size_range = c(1, 10), node_text_size = 5, edge_width = 1)
p1

SrcGFP.combined.sct@active.assay <- "integrated" 
SrcGFP.combined.sct <- FindClusters(SrcGFP.combined.sct, resolution = 0.3)
DimPlot(SrcGFP.combined.sct, pt.size = 2)
SrcGFP.combined.sct@assays
SrcGFP.combined.sct@active.assay <- "SCT" 
SrcGFP.combined.sct <- PrepSCTFindMarkers(SrcGFP.combined.sct)
SrcGFP.combined.sctmarkers <- FindAllMarkers(SrcGFP.combined.sct, only.pos = T)


as.character(seq(1,11))
CellsToKeep <- WhichCells(SrcGFP.combined.sct, idents = c( "1",  "3",  "4",  "5",  "6",  "7",  "8",  "9",  "10", "11"))
DimPlot(SrcGFP.combined.sct, pt.size = 2, cells = CellsToKeep, cells.highlight = evilcells)

#Check All dimentions----
setwd("/Volumes/Macintosh HD/Users/amay/Desktop/PAPERFIGURES/Dims/")


dimseq <- seq(2, to = 45)
for (i in dimseq)
{ 
  SrcGFP.combined.sct <- RunUMAP(SrcGFP.combined.sct, reduction = "pca", dims = 1:i)
  origDim <- DimPlot(SrcGFP.combined.sct, reduction = "umap", group.by = "orig.ident")
  SrcGFP.combined.sct <- FindNeighbors(SrcGFP.combined.sct, reduction = "pca", dims = 1:i)
  SrcGFP.combined.sct <- FindClusters(SrcGFP.combined.sct, resolution = 0.1)
  SrcGFP.combined.sctPlot <- DimPlot(SrcGFP.combined.sct)
  combinedplot <- origDim + SrcGFP.combined.sctPlot
  png(paste(i, ".png", sep = ""), width=1000, height=500)
  plot(combinedplot)
  dev.off() 
}

SrcGFP.combined.sct@active.assay <- "integrated" 

SrcGFP.combined.sct <- RunUMAP(SrcGFP.combined.sct, reduction = "pca", dims = 1:12)
DimPlot(SrcGFP.combined.sct, reduction = "umap", group.by = "orig.ident")
SrcGFP.combined.sct <- FindNeighbors(SrcGFP.combined.sct, reduction = "pca", dims = 1:12)
SrcGFP.combined.sct <- FindClusters(SrcGFP.combined.sct, resolution = 0.2)
DimPlot(SrcGFP.combined.sct, pt.size = 2)
DimPlot(SrcGFP.combined.sct, pt.size = 2, group.by = "geno")
DimPlot(SrcGFP.combined.sct, pt.size = 2)


SrcGFP.combined.sct@active.assay <- "SCT" 
FeaturePlot(SrcGFP.combined.sct, pt.size = 3, features = "CG13159", order = T, cols = c("yellow", "blue"))
SrcGFP.combined.sct <- PrepSCTFindMarkers(SrcGFP.combined.sct)

mayQC_SGonly <- FindAllMarkers(SrcGFP.combined.sct, only.pos = T)
mayQC_SGonly$enrich <- (mayQC_SGonly$pct.1)/(mayQC_SGonly$pct.2)
keep <- WhichCells(SrcGFP.combined.sct, idents = c("1", "2",  "3",  "4",  "5",  "6",  "7",  "8",  "9",  "10"))


SrcGFP_1.data <- Read10X("/Volumes/Macintosh HD/Users/amay/Desktop/ThesisRevisions/Datasets/may_2023/SrcGFP_4/filtered_feature_bc_matrix/")
SrcGFP_2.data <- Read10X("/Volumes/Macintosh HD/Users/amay/Desktop/ThesisRevisions/Datasets/may_2023/SrcGFP_3/filtered_feature_bc_matrix/")
ArmYFP.data <- Read10X("/Volumes/Macintosh HD/Users/amay/Desktop/ThesisRevisions/Datasets/may_2023/ArmYFP/filtered_feature_bc_matrix/")


#Generate Seurat Object 
SrcGFP_1 <- CreateSeuratObject(SrcGFP_1.data)
SrcGFP_2 <- CreateSeuratObject(SrcGFP_2.data)
ArmYFP <- CreateSeuratObject(ArmYFP.data)

SrcGFP_1$geno <- "Salivary Gland"
SrcGFP_2$geno <- "Salivary Gland"
ArmYFP$geno <- "Epidermis"


SrcGFP_1$orig.ident <- "SrcGFP_1"
SrcGFP_2$orig.ident <- "SrcGFP_2"
ArmYFP$orig.ident <- "ArmYFP"


SrcGFP.combined <- merge(SrcGFP_1, y = c(SrcGFP_2, ArmYFP), add.cell.ids = c("SrcGFP1", "SrcGFP2", "ArmYFP"))
table(SrcGFP.combined$geno)
SrcGFP.combined[["percent.mt"]] <- PercentageFeatureSet(SrcGFP.combined, pattern = "mt:")
SrcGFP.combined[["percent.ribo"]] <- PercentageFeatureSet(SrcGFP.combined, pattern = "^Rp[LS]")
VlnPlot(SrcGFP.combined, features = c("nFeature_RNA", "nCount_RNA", "percent.mt", "percent.ribo"), split.by = "orig.ident" , ncol = 4)

SrcGFP.combined <- subset(SrcGFP.combined, subset = nFeature_RNA > 200 & nFeature_RNA < 2500 & nCount_RNA <10000 & percent.mt < 10)
SrcGFP.combined <- subset(SrcGFP.combined, cells = CellsToKeep)


VlnPlot(SrcGFP.combined, features = c("nFeature_RNA", "nCount_RNA", "percent.mt", "percent.ribo"), split.by = "geno" , ncol = 4)

SrcGFP.list <- SplitObject(SrcGFP.combined, split.by = "orig.ident")
SrcGFP.list
SrcGFP.list <- lapply(X = SrcGFP.list, FUN = SCTransform, vars.to.regress = c("percent.mt", "percent.ribo"))
features <- SelectIntegrationFeatures(object.list = SrcGFP.list, nfeatures = 3000)
SrcGFP.list <- PrepSCTIntegration(object.list = SrcGFP.list, anchor.features = features)

SrcGFP.anchors <- FindIntegrationAnchors(object.list = SrcGFP.list, normalization.method = "SCT", 
                                         anchor.features = features)
SrcGFP.combined.sct <- IntegrateData(anchorset = SrcGFP.anchors, normalization.method = "SCT")

SrcGFP.combined.sct <- RunPCA(SrcGFP.combined.sct)

#Estimate dimentions----
pct <- SrcGFP.combined.sct[["pca"]]@stdev / sum(SrcGFP.combined.sct[["pca"]]@stdev) * 100
cumu <- cumsum(pct)
co1 <- which(cumu > 90 & pct < 5)[1]
co2 <- sort(which((pct[1:length(pct) - 1] - pct[2:length(pct)]) > 0.1), decreasing = T)[1] + 1
pcs <- min(co1, co2)
pcs

#Plot dimentions 10 for UMAP it is the lower bound of dimentions ----
SrcGFP.combined.sct <- RunUMAP(SrcGFP.combined.sct, reduction = "pca", dims = 1:12)
DimPlot(SrcGFP.combined.sct, reduction = "umap", group.by = "orig.ident", pt.size = 1, order = T, split.by = "orig.ident")
SrcGFP.combined.sct <- FindNeighbors(SrcGFP.combined.sct, reduction = "pca", dims = 1:12)
SrcGFP.combined.sct <- FindClusters(SrcGFP.combined.sct, resolution = 0.4)
DimPlot(SrcGFP.combined.sct, pt.size = 2)
DimPlot(SrcGFP.combined.sct, reduction = "umap", group.by = "orig.ident")
FeaturePlot(SrcGFP.combined.sct, features = "percent.ribo", cols = c("yellow", "blue"), pt.size = 2, order = T)
Cells_to_highlight <- WhichCells(SrcGFP.combined.sct, idents = c("0", "1", "3", "5", "7"))
DimPlot(SrcGFP.combined.sct, pt.size = 2, cells.highlight =  Cells_to_highlight, sizes.highlight = 2)

#Check All dimentions----
setwd("/Volumes/Macintosh HD/Users/amay/Desktop/PAPERFIGURES/Dims/")

SrcGFP.combined.sct@active.assay <- "integrated" 

dimseq <- seq(2, to = 45)
for (i in dimseq)
{ 
  SrcGFP.combined.sct <- RunUMAP(SrcGFP.combined.sct, reduction = "pca", dims = 1:i)
  origDim <- DimPlot(SrcGFP.combined.sct, reduction = "umap", group.by = "orig.ident")
  SrcGFP.combined.sct <- FindNeighbors(SrcGFP.combined.sct, reduction = "pca", dims = 1:i)
  SrcGFP.combined.sct <- FindClusters(SrcGFP.combined.sct, resolution = 0.1)
  SrcGFP.combined.sctPlot <- DimPlot(SrcGFP.combined.sct)
  combinedplot <- origDim + SrcGFP.combined.sctPlot
  png(paste(i, ".png", sep = ""), width=1000, height=500)
  plot(combinedplot)
  dev.off() 
}

SrcGFP.combined.sct@active.assay <- "integrated" 

SrcGFP.combined.sct <- RunUMAP(SrcGFP.combined.sct, reduction = "pca", dims = 1:10)
DimPlot(SrcGFP.combined.sct, reduction = "umap", group.by = "orig.ident")
SrcGFP.combined.sct <- FindNeighbors(SrcGFP.combined.sct, reduction = "pca", dims = 1:10)
SrcGFP.combined.sct <- FindClusters(SrcGFP.combined.sct, resolution = 0.4)
DimPlot(SrcGFP.combined.sct, pt.size = 2)
DimPlot(SrcGFP.combined.sct, pt.size = 2, group.by = "geno")
DimPlot(SrcGFP.combined.sct, pt.size = 2, cells.highlight = mayQCcells)
DimPlot(mayQC, pt.size = 2,cells.highlight = mayQCcells)
mayQCcells <- WhichCells(mayQC)
SrcGFP.combined.sct@active.assay <- "SCT" 
FeaturePlot(SrcGFP.combined.sct, pt.size = 3, features = "Pdp1", order = T, cols = c("yellow", "blue"), min.cutoff = 0.75)
SrcGFP.combined.sct <- PrepSCTFindMarkers(SrcGFP.combined.sct)
SrcGFP.combinedmarkers <- FindAllMarkers(SrcGFP.combined.sct, only.pos = T)
evilcells <- WhichCells(SrcGFP.combined.sct, idents = "1")


DimPlot(SrcGFP.combined.sct, pt.size = 2, cells.highlight = evilcells)

MayQCCells <- WhichCells(mayQC)

SGCELLS <-WhichCells(SrcGFP.combined.sct, idents = c("0", "1", "3", "4", "5", "10"))
DimPlot(SrcGFP.combined.sct, pt.size = 2,cells.highlight = SGCELLS)


SrcGFP_1.data <- Read10X("/Volumes/Macintosh HD/Users/amay/Desktop/ThesisRevisions/Datasets/may_2023/SrcGFP_4/filtered_feature_bc_matrix/")
SrcGFP_2.data <- Read10X("/Volumes/Macintosh HD/Users/amay/Desktop/ThesisRevisions/Datasets/may_2023/SrcGFP_3/filtered_feature_bc_matrix/")
ArmYFP.data <- Read10X("/Volumes/Macintosh HD/Users/amay/Desktop/ThesisRevisions/Datasets/may_2023/ArmYFP/filtered_feature_bc_matrix/")


#Generate Seurat Object 
SrcGFP_1 <- CreateSeuratObject(SrcGFP_1.data)
SrcGFP_2 <- CreateSeuratObject(SrcGFP_2.data)
ArmYFP <- CreateSeuratObject(ArmYFP.data)

SrcGFP_1$geno <- "Salivary Gland"
SrcGFP_2$geno <- "Salivary Gland"
ArmYFP$geno <- "Epidermis"


SrcGFP_1$orig.ident <- "SrcGFP_1"
SrcGFP_2$orig.ident <- "SrcGFP_2"
ArmYFP$orig.ident <- "ArmYFP"


SrcGFP.combined <- merge(SrcGFP_1, y = c(SrcGFP_2, ArmYFP), add.cell.ids = c("SrcGFP1", "SrcGFP2", "ArmYFP"))
table(SrcGFP.combined$geno)
SrcGFP.combined[["percent.mt"]] <- PercentageFeatureSet(SrcGFP.combined, pattern = "mt:")
SrcGFP.combined[["percent.ribo"]] <- PercentageFeatureSet(SrcGFP.combined, pattern = "^Rp[LS]")
VlnPlot(SrcGFP.combined, features = c("nFeature_RNA", "nCount_RNA", "percent.mt", "percent.ribo"), split.by = "orig.ident" , ncol = 4)

SrcGFP.combined <- subset(SrcGFP.combined, subset = nFeature_RNA > 200 & nFeature_RNA < 2500 & nCount_RNA <10000 & percent.mt < 10)
SrcGFP.combined <- subset(SrcGFP.combined, cells = Cells_to_highlight)
table(SrcGFP.combined$geno)

VlnPlot(SrcGFP.combined, features = c("nFeature_RNA", "nCount_RNA", "percent.mt", "percent.ribo"), split.by = "geno" , ncol = 4)

SrcGFP.list <- SplitObject(SrcGFP.combined, split.by = "orig.ident")
SrcGFP.list
SrcGFP.list <- lapply(X = SrcGFP.list, FUN = SCTransform, vars.to.regress = c("percent.mt", "percent.ribo"))
features <- SelectIntegrationFeatures(object.list = SrcGFP.list, nfeatures = 3000)
SrcGFP.list <- PrepSCTIntegration(object.list = SrcGFP.list, anchor.features = features)

SrcGFP.anchors <- FindIntegrationAnchors(object.list = SrcGFP.list, normalization.method = "SCT", 
                                         anchor.features = features)
SrcGFP.combined.sct <- IntegrateData(anchorset = SrcGFP.anchors, normalization.method = "SCT")

SrcGFP.combined.sct <- RunPCA(SrcGFP.combined.sct)

#Estimate dimentions----
pct <- SrcGFP.combined.sct[["pca"]]@stdev / sum(SrcGFP.combined.sct[["pca"]]@stdev) * 100
cumu <- cumsum(pct)
co1 <- which(cumu > 90 & pct < 5)[1]
co2 <- sort(which((pct[1:length(pct) - 1] - pct[2:length(pct)]) > 0.1), decreasing = T)[1] + 1
pcs <- min(co1, co2)
pcs

#Plot dimentions 10 for UMAP it is the lower bound of dimentions ----
SrcGFP.combined.sct <- RunUMAP(SrcGFP.combined.sct, reduction = "pca", dims = 1:9)
DimPlot(SrcGFP.combined.sct, reduction = "umap", group.by = "orig.ident")
SrcGFP.combined.sct <- FindNeighbors(SrcGFP.combined.sct, reduction = "pca", dims = 1:9)
SrcGFP.combined.sct <- FindClusters(SrcGFP.combined.sct, resolution = 0.2)
DimPlot(SrcGFP.combined.sct, pt.size = 2)
DimPlot(SrcGFP.combined.sct, pt.size = 2, cells.highlight = MayQCCells)
DimPlot(SrcGFP.combined.sct, pt.size = 2, cells.highlight = CellsToKeep)
SrcGFP.combined.sct@active.assay <- "SCT" 
FeaturePlot(SrcGFP.combined.sct, pt.size = 3, features = "E(spl)mgamma-HLH", order = T, cols = c("yellow", "blue"))

#Check All dimentions----
setwd("/Volumes/Macintosh HD/Users/amay/Desktop/PAPERFIGURES/Dims/")

SrcGFP.combined.sct@active.assay <- "integrated" 

dimseq <- seq(2, to = 45)
for (i in dimseq)
{ 
  SrcGFP.combined.sct <- RunUMAP(SrcGFP.combined.sct, reduction = "pca", dims = 1:i)
  origDim <- DimPlot(SrcGFP.combined.sct, reduction = "umap", group.by = "orig.ident")
  SrcGFP.combined.sct <- FindNeighbors(SrcGFP.combined.sct, reduction = "pca", dims = 1:i)
  SrcGFP.combined.sct <- FindClusters(SrcGFP.combined.sct, resolution = 0.1)
  SrcGFP.combined.sctPlot <- DimPlot(SrcGFP.combined.sct)
  combinedplot <- origDim + SrcGFP.combined.sctPlot
  png(paste(i, ".png", sep = ""), width=1000, height=500)
  plot(combinedplot)
  dev.off() 
}
SrcGFP.combined.sct@active.assay <- "SCT" 
SrcGFP.combined.sct <- PrepSCTFindMarkers(SrcGFP.combined.sct)
SrcGFP.combinedmarkers <- FindAllMarkers(SrcGFP.combined.sct)

DimPlot(SrcGFP.combined.sct, pt.size = 2) + xlim(-10,10) + ylim(-10,10)

FeaturePlot(SrcGFP.combined.sct, pt.size = 3, features = "Sema1a", order = T, cols = c("yellow", "blue"), min.cutoff = 0.5) + xlim(-8,8) + ylim(-8,8)

if (!requireNamespace("BiocManager", quietly = TRUE))
  install.packages("BiocManager")
BiocManager::install(version = "3.16")

BiocManager::install(c('BiocGenerics', 'DelayedArray', 'DelayedMatrixStats',
                       'limma', 'lme4', 'S4Vectors', 'SingleCellExperiment',
                       'SummarizedExperiment', 'batchelor', 'HDF5Array',
                       'terra', 'ggrastr'))
BiocManager::install("monocle")
BiocManager::install("SeuratWrappers")
BiocManager::install("garnett")
install.packages("devtools")
devtools::install_github('cole-trapnell-lab/monocle3')

# Install a few Garnett dependencies:
BiocManager::install(c('org.Hs.eg.db', 'org.Mm.eg.db'))

# Install Garnett
devtools::install_github("cole-trapnell-lab/garnett", ref="monocle3")

library(monocle)
library(garnett)
SrcGFP.combined.sct@assays$integrated
SrcGFP.combined.sct@meta.data$integrated_snn_res.0.2

cds <- as.CellDataSet(SrcGFP.combined.sct, assay = "integrated", reduction = "UMAP")
class(monocle_object)
cds <- reduce_dimension(cds)

plot_cells(cds,
           genes="fkh",
           label_cell_groups=FALSE,
           show_trajectory_graph=FALSE)

monocle_object <- cluster_cells(cds = monocle_object, reduction_method = "UMAP")
monocle_object <- learn_graph(monocle_object, use_partition = TRUE)
monocle_object <- order_cells(monocle_object,reduction_method = "UMAP")
plot_cells(monocle_object,
           color_cells_by = "pseudotime",
           graph_label_size=5,
           show_trajectory_graph = TRUE)


cds <- preprocess_cds(cds, num_dim = 50)
cds <- align_cds(cds, alignment_group = "batch", residual_model_formula_str = "~ bg.300.loading + bg.400.loading + bg.500.1.loading + bg.500.2.loading + bg.r17.loading + bg.b01.loading + bg.b02.loading")
Inst
BiocManager::install("DropletUtils")
library(DropletUtils)
write10xCounts(x = SrcGFP.combined.sct@assays$SCT@counts,
               path = '/Users/amay/Desktop/PAPERFIGURES/monocle/outs', version = "3")

plant_cds <- load_cellranger_data("/Users/amay/Desktop/PAPERFIGURES/monocle/")
monocle_object <- plant_cds
monocle_object$UMAP 
monocle_object <- preprocess_cds(monocle_object, num_dim = 100)
plot_pc_variance_explained(monocle_object)
monocle_object <- reduce_dimension(monocle_object)
plot_cells(monocle_object)
plot_cells(monocle_object, genes=c("fkh", "pip", "CG9005"),reduction_method = "UMAP", cell_size = 3)
monocle_object <- cluster_cells(cds = monocle_object, reduction_method = "UMAP")
marker_test_res <- top_markers(monocle_object, group_cells_by="partition", 
                               reference_cells=1000, cores=8)
monocle_object <- learn_graph(monocle_object)
plot_cells(monocle_object,
           color_cells_by = "cluster",
           label_groups_by_cluster=FALSE,
           label_leaves=T,
           label_branch_points=FALSE)
monocle_object <- order_cells(monocle_object)
plot_cells(monocle_object,
           color_cells_by = "pseudotime",
           label_cell_groups=FALSE,
           label_leaves=FALSE,
           label_branch_points=FALSE,
           graph_label_size=1.5, cell_size = 2)

may2023 <- readRDS("/Volumes/Macintosh HD/Users/amay/Desktop/ThesisRevisions/Datasets/may_2023/SeuratpostQC/EPandSrcGFP_int.rds")

DimPlot(may2023, pt.size = 3, split.by = "orig.ident")
cellhighlight <- WhichCells(may2023, idents = c("0", "1","2","4"))

DimPlot(may2023, pt.size = 3, cells.highlight = cellhighlight, sizes.highlight = 3)
may2023@active.assay <- "SCT" 
FeaturePlot(may2023, features = "Mef2", pt.size = 2, cols = c("yellow", "blue"), order = T)


SrcGFP_1.data <- Read10X("/Volumes/Macintosh HD/Users/amay/Desktop/ThesisRevisions/Datasets/may_2023/SrcGFP_4/filtered_feature_bc_matrix/")
SrcGFP_2.data <- Read10X("/Volumes/Macintosh HD/Users/amay/Desktop/ThesisRevisions/Datasets/may_2023/SrcGFP_3/filtered_feature_bc_matrix/")
ArmYFP.data <- Read10X("/Volumes/Macintosh HD/Users/amay/Desktop/ThesisRevisions/Datasets/may_2023/ArmYFP/filtered_feature_bc_matrix/")


#Generate Seurat Object 
SrcGFP_1 <- CreateSeuratObject(SrcGFP_1.data)
SrcGFP_2 <- CreateSeuratObject(SrcGFP_2.data)
ArmYFP <- CreateSeuratObject(ArmYFP.data)

SrcGFP_1$geno <- "Salivary Gland"
SrcGFP_2$geno <- "Salivary Gland"
ArmYFP$geno <- "Epidermis"


SrcGFP_1$orig.ident <- "SrcGFP_1"
SrcGFP_2$orig.ident <- "SrcGFP_2"
ArmYFP$orig.ident <- "ArmYFP"


SrcGFP.combined <- merge(SrcGFP_1, y = c(SrcGFP_2, ArmYFP), add.cell.ids = c("SrcGFP1", "SrcGFP2", "ArmYFP"))
table(SrcGFP.combined$geno)
SrcGFP.combined[["percent.mt"]] <- PercentageFeatureSet(SrcGFP.combined, pattern = "mt:")
SrcGFP.combined[["percent.ribo"]] <- PercentageFeatureSet(SrcGFP.combined, pattern = "^Rp[LS]")
VlnPlot(SrcGFP.combined, features = c("nFeature_RNA", "nCount_RNA", "percent.mt", "percent.ribo"), split.by = "orig.ident" , ncol = 4)

SrcGFP.combined <- subset(SrcGFP.combined, subset = nFeature_RNA > 200 & nFeature_RNA < 2500 & nCount_RNA <10000 & percent.mt < 10)
SrcGFP.combined <- subset(SrcGFP.combined, cells = cellhighlight)

table(SrcGFP.combined$geno)

VlnPlot(SrcGFP.combined, features = c("nFeature_RNA", "nCount_RNA", "percent.mt", "percent.ribo"), split.by = "geno" , ncol = 4)

SrcGFP.list <- SplitObject(SrcGFP.combined, split.by = "orig.ident")
SrcGFP.list
SrcGFP.list <- lapply(X = SrcGFP.list, FUN = SCTransform, vars.to.regress = c("percent.mt", "percent.ribo"))
features <- SelectIntegrationFeatures(object.list = SrcGFP.list, nfeatures = 3000)
SrcGFP.list <- PrepSCTIntegration(object.list = SrcGFP.list, anchor.features = features)

SrcGFP.anchors <- FindIntegrationAnchors(object.list = SrcGFP.list, normalization.method = "SCT", 
                                         anchor.features = features)
SrcGFP.combined.sct <- IntegrateData(anchorset = SrcGFP.anchors, normalization.method = "SCT")

SrcGFP.combined.sct <- RunPCA(SrcGFP.combined.sct)

#Estimate dimentions----
pct <- SrcGFP.combined.sct[["pca"]]@stdev / sum(SrcGFP.combined.sct[["pca"]]@stdev) * 100
cumu <- cumsum(pct)
co1 <- which(cumu > 90 & pct < 5)[1]
co2 <- sort(which((pct[1:length(pct) - 1] - pct[2:length(pct)]) > 0.1), decreasing = T)[1] + 1
pcs <- min(co1, co2)
pcs

#Plot dimentions 10 for UMAP it is the lower bound of dimentions ----
SrcGFP.combined.sct <- RunUMAP(SrcGFP.combined.sct, reduction = "pca", dims = 1:11)
DimPlot(SrcGFP.combined.sct, reduction = "umap", group.by = "orig.ident", pt.size = 2)
SrcGFP.combined.sct <- FindNeighbors(SrcGFP.combined.sct, reduction = "pca", dims = 1:11)
SrcGFP.combined.sct <- FindClusters(SrcGFP.combined.sct, resolution = 0.2)
DimPlot(SrcGFP.combined.sct, pt.size = 2)


DimPlot(SrcGFP.combined.sct, reduction = "umap", group.by = "orig.ident")

#Check All dimentions----
setwd("/Volumes/Macintosh HD/Users/amay/Desktop/PAPERFIGURES/Dims/")

SrcGFP.combined.sct@active.assay <- "integrated" 

dimseq <- seq(2, to = 45)
for (i in dimseq)
{ 
  SrcGFP.combined.sct <- RunUMAP(SrcGFP.combined.sct, reduction = "pca", dims = 1:i)
  origDim <- DimPlot(SrcGFP.combined.sct, reduction = "umap", group.by = "orig.ident")
  SrcGFP.combined.sct <- FindNeighbors(SrcGFP.combined.sct, reduction = "pca", dims = 1:i)
  SrcGFP.combined.sct <- FindClusters(SrcGFP.combined.sct, resolution = 0.1)
  SrcGFP.combined.sctPlot <- DimPlot(SrcGFP.combined.sct)
  combinedplot <- origDim + SrcGFP.combined.sctPlot
  png(paste(i, ".png", sep = ""), width=1000, height=500)
  plot(combinedplot)
  dev.off() 
}


#Plot dimentions 10 for UMAP it is the lower bound of dimentions ----
SrcGFP.combined.sct <- RunUMAP(SrcGFP.combined.sct, reduction = "pca", dims = 1:7)
DimPlot(SrcGFP.combined.sct, reduction = "umap", group.by = "orig.ident", pt.size = 2)
SrcGFP.combined.sct <- FindNeighbors(SrcGFP.combined.sct, reduction = "pca", dims = 1:7)
SrcGFP.combined.sct <- FindClusters(SrcGFP.combined.sct, resolution = 0.4)
DimPlot(SrcGFP.combined.sct, pt.size = 3)
SrcGFP.combined.sct@active.assay <- "integrated" 
SrcGFP.combined.sct@active.assay <- "SCT" 
SrcGFP.combined.sct <- PrepSCTFindMarkers(SrcGFP.combined.sct)
SrcGFP.combined.sctMARKERSres0.4 <- FindAllMarkers(SrcGFP.combined.sct, logfc.threshold = 0)
Timeline <- WhichCells(SrcGFP.combined.sct, idents = c( "1", "2", "4", "6"))
DimPlot(SrcGFP.combined.sct, pt.size = 3, cells = Timeline) + xlim(-3, 6)


SrcGFP.combined.sctMARKERS <- FindAllMarkers(SrcGFP.combined.sct, logfc.threshold = 0)

SrcGFP.combined.sctMARKERS1 <- subset(SrcGFP.combined.sctMARKERS, cluster == "0")
SrcGFP.combined.sctMARKERS2 <- subset(SrcGFP.combined.sctMARKERS, cluster == "1")
SrcGFP.combined.sctMARKERS3 <- subset(SrcGFP.combined.sctMARKERS, cluster == "2")

labels <- SrcGFP.combined.sctMARKERS2$gene

toppostivie <- subset(SrcGFP.combined.sctMARKERS2, avg_log2FC > 0.3)
toppostivienames <- toppostivie$gene
top10 <- toppostivienames[1:30]

topneg <- subset(SrcGFP.combined.sctMARKERS2, avg_log2FC < 0.3)
topnegnames <- topneg$gene
bottom10 <- topnegnames[1:10]

top10 <- append(top10, bottom10)

EnhancedVolcano(SrcGFP.combined.sctMARKERS2, 
                lab= labels, 
                x = "avg_log2FC", 
                y = "p_val_adj", 
                xlab = bquote(~Log[2]~ 'fold change'),
                pCutoff = 10e-10,
                FCcutoff = 0.25,
                drawConnectors = T,
                widthConnectors = 0.5,
                labSize = 3,
                col = c("#00BFC4","#00BFC4", "#00BFC4", "#F68282"),
                xlim = c(-1.3,2.1),
                ylim = c(0,220),
                colAlpha = 1,
                maxoverlapsConnectors = 100,
                selectLab = top10, boxedLabels = F)

labels <- SrcGFP.combined.sctMARKERS3$gene

toppostivie <- subset(SrcGFP.combined.sctMARKERS3, avg_log2FC > 0.3)
toppostivienames <- toppostivie$gene
top10 <- toppostivienames[1:20]

topneg <- subset(SrcGFP.combined.sctMARKERS3, avg_log2FC < 0.3)
topnegnames <- topneg$gene
bottom10 <- topnegnames[1:10]

top10 <- append(top10, bottom10)

EnhancedVolcano(SrcGFP.combined.sctMARKERS3, 
                lab= labels, 
                x = "avg_log2FC", 
                y = "p_val_adj", 
                xlab = bquote(~Log[2]~ 'fold change'),
                pCutoff = 10e-10,
                FCcutoff = 0.25,
                drawConnectors = T,
                widthConnectors = 0.5,
                labSize = 7,
                col = c("#00BFC4","#00BFC4", "#00BFC4", "#F68282"),
                xlim = c(-1.5,1.5),
                ylim = c(0,140),
                colAlpha = 1,
                maxoverlapsConnectors = 100,
                selectLab = top10, boxedLabels = T)


DoHeatmap(SrcGFP.combined.sct,slot = "scale.data", features = top10)
DoHeatmap(subset(SrcGFP.combined.sct, downsample = 100), features = top10)

top10 <- toppostivienames[1:10]
bottom10 <- topnegnames[1:10]
top10 <- append(top10, bottom10)

SrcGFP.combined.sctMARKERS1 <- subset(SrcGFP.combined.sctMARKERS, cluster == "0")
SrcGFP.combined.sctMARKERS2 <- subset(SrcGFP.combined.sctMARKERS, cluster == "1")
SrcGFP.combined.sctMARKERS3 <- subset(SrcGFP.combined.sctMARKERS, cluster == "2")

toppostivie1 <- subset(SrcGFP.combined.sctMARKERS1, avg_log2FC > 0.3)
toppostivienames1 <- toppostivie1$gene
top10_1 <- toppostivienames1[1:10]

toppostivie2 <- subset(SrcGFP.combined.sctMARKERS2, avg_log2FC > 0.3)
toppostivienames2 <- toppostivie2$gene
top10_2 <- toppostivienames2[1:10]

toppostivie3 <- subset(SrcGFP.combined.sctMARKERS3, avg_log2FC > 0.3)
toppostivienames3 <- toppostivie3$gene
top10_3 <- toppostivienames3[1:10]


top10 <- append(top10_1, top10_2)
top10 <- append(top10, top10_3)

DotPlot(SrcGFP.combined.sct, features = top10, cols = c("yellow", "blue"),scale.by = "radius") + RotatedAxis()

write.csv(SrcGFP.combined.sctMARKERS, "/Volumes/Macintosh HD/Users/amay/Desktop/PAPERFIGURES/Resubset3clustermarkers.csv")


SrcGFP.combined.sct@active.assay <- "integrated" 
SrcGFP.combined.sct@active.assay <- "SCT" 
SrcGFP.combined.sct <- PrepSCTFindMarkers(SrcGFP.combined.sct)
SrcGFP.combined.sctMARKERSres0.4 <- FindAllMarkers(SrcGFP.combined.sct, logfc.threshold = 0)
Timeline <- WhichCells(SrcGFP.combined.sct, idents = c( "1", "2", "4", "6"))
DimPlot(SrcGFP.combined.sct, pt.size = 3, cells = Timeline) + xlim(-3, 6)
FeaturePlot(SrcGFP.combined.sct, features = "toe", cells = Timeline)

SrcGFP.combined.sctMARKERS1subset <- subset(SrcGFP.combined.sctMARKERSres0.4, cluster == "1")
SrcGFP.combined.sctMARKERS2subset <- subset(SrcGFP.combined.sctMARKERSres0.4, cluster == "2")
SrcGFP.combined.sctMARKERS3subset <- subset(SrcGFP.combined.sctMARKERSres0.4, cluster == "4")
SrcGFP.combined.sctMARKERS4subset <- subset(SrcGFP.combined.sctMARKERSres0.4, cluster == "6")

labels <- SrcGFP.combined.sctMARKERS2subset$gene
labelssubset <- c(labels[1:15], "Obp99a", "fj", "toe", "fkh", "fog")

EnhancedVolcano(SrcGFP.combined.sctMARKERS2subset, 
                lab= labels, 
                x = "avg_log2FC", 
                y = "p_val_adj", 
                xlab = bquote(~Log[2]~ 'fold change'),
                pCutoff = 10e-10,
                FCcutoff = 0.25,
                drawConnectors = T,
                widthConnectors = 0.5,
                labSize = 7,
                col = c("#00BFC4","#00BFC4", "#00BFC4", "#F68282"),
                xlim = c(-0.7,1.62),
                ylim = c(0,150),
                colAlpha = 1,
                maxoverlapsConnectors = 100,
                selectLab = labelssubset, boxedLabels = T)

DotPlot(SrcGFP.combined.sct, features = top10,scale.by = "radius",idents =c("1", "2", "4", "6")) + RotatedAxis() + scale_colour_gradient2(low = "#FF00FF", mid = "white", high = "green")

DotPlot(SrcGFP.combined.sct, features = top10, idents =c("1", "2", "4", "6")) +
  geom_point(aes(size=pct.exp), shape = 21, colour="darkgrey", stroke=0.75) +
  scale_color_gradient2(low = "#FF00FF", mid = "white", high = "green") +
  guides(size=guide_legend(override.aes=list(shape=21, colour="black", fill="white"))) + RotatedAxis()
library(viridis)

toppostivie1 <- subset(SrcGFP.combined.sctMARKERS1subset, avg_log2FC > 0.3)
toppostivienames1 <- toppostivie1$gene
top10_1 <- toppostivienames1[1:15]

toppostivie2 <- subset(SrcGFP.combined.sctMARKERS2subset, avg_log2FC > 0.3)
toppostivienames2 <- toppostivie2$gene
top10_2 <- toppostivienames2[1:15]

toppostivie3 <- subset(SrcGFP.combined.sctMARKERS3subset, avg_log2FC > 0.3)
toppostivienames3 <- toppostivie3$gene
top10_3 <- toppostivienames3[1:7]

toppostivie4 <- subset(SrcGFP.combined.sctMARKERS4subset, avg_log2FC > 0.3)
toppostivienames4 <- toppostivie4$gene
top10_4 <- toppostivienames4[1:15]


top10 <- append(top10_2, top10_1)
top10 <- append(top10, top10_3)
top10 <- append(top10, top10_4)

top10 <- unique(top10)

